etcd:
  image: rancher/etcd:v2.3.7-9
  labels:
    io.rancher.container.pull_image: always
    io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
    io.rancher.scheduler.affinity:host_label_soft: etcd=true
  environment:
    RANCHER_DEBUG: 'true'
    EMBEDDED_BACKUPS: 'false'
  volumes:
  - ${ETCD_VOLUME_MOUNT}:/pdata
cassandra:
  image: llparse/cassandra:v3.7
  labels:
    io.rancher.container.pull_image: always
    io.rancher.scheduler.global: true
    io.rancher.sidekicks: node,api
  links:
  - etcd
  ports:
  - 4000:4000/tcp
  environment:
    RANCHER_DEBUG: 'true'
    CASSANDRA_CLUSTER_NAME: chanarchive
    HEAP_NEWSIZE: ${MAX_HEAP_SIZE}
    MAX_HEAP_SIZE: ${MAX_HEAP_SIZE}
  volumes:
  - ${CASS_VOLUME_MOUNT}:/var/lib/cassandra
node:
  image: llparse/chanarchive:v1.0
  command: >
    -node
    -cassandra 127.0.0.1
    -clustername chanarchive
    -etcd http://chanarchive_etcd_1:2379,http://chanarchive_etcd_2:2379,http://chanarchive_etcd_3:2379
    -httpport 3333
    -keyspace chan
    ${NODE_ARGS}
  labels:
    io.rancher.container.pull_image: always
  net: container:cassandra
api:
  image: llparse/chanarchive:v1.0
  command: >
    -api
    -cassandra 127.0.0.1
    -clustername chanarchive
    -etcd http://chanarchive_etcd_1:2379,http://chanarchive_etcd_2:2379,http://chanarchive_etcd_3:2379
    -httpport 4000
    -keyspace chan
  labels:
    io.rancher.container.pull_image: always
  net: container:cassandra